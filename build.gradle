plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}
apply from: '../minecraft_gradle_tools/gradleModDependencies.gradle'

jarJar.enable()

version = "${mod_version}"
group = "com.userofbricks.${mod_id}"

base {
    archivesName = "${mod_id}-${minecraft_version}"
}

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

runs(mod_id)

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    repos()
    flatDir {
        dir 'libs'
    }
    mavenCentral()
    maven {
        url = "https://modmaven.dev/"
    }
}

dependencies {
    mc_forge()

    registrate()

    implementation fg.deobf("teamtwilight:twilightforest:${twilight_forest_version}:universal")

    expanded_combat()
    cloth_config()
    curiosAll()
    jei()
    better_combat()
}
tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,

            curios_version: curios_version, cloth_config_api_version: cloth_config_api_version,
            twilight_forest_version: twilight_forest_version, better_combat_version: better_combat_version,
            expanded_combat_version: expanded_combat_version,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

jars(name: mod_id, authors: 'Userofbricks')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

reobf {
    jarJar { }
}

tasks.jarJar.finalizedBy('reobfJarJar')
